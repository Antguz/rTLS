#' @import dplyr
#'
#' @title Dimensionality of neighboring points based on a radius of a sphere.
#'
#' @description Estimate the dimensionality of the neighboring points of a targed point based on a radius.
#'
#' @param x A \code{matrix} or \code{data.frame} of a point with xyz coordinates.
#' @param cloud a \code{matrix} or \code{data.frame} of a point cloud with xyz coordinates.
#' @param radius a numeric vector of a length 1 representing the minimum distance to consider neighboring points.
#'
#' @return A  \code{matrix} with the xyz coordinates of the neighboring points and a fourth column with their distance.
#' @author J. Antonio Guzman Q. and Ronny Hernandez
#'
#' @examples
#' data("pc_tree")
#' dist_dimensionality(pc_tree[100,], pc_tree, radius = 0.2)
#'
#' @export
dist_dimensionality <- function(x, cloud, radius) {
  cube <- cloud %>% filter(cloud[,1] <= (x[,1] + radius), cloud[,1] >= (x[,1] - radius),
                           cloud[,2] <= (x[,2] + radius), cloud[,2] >= (x[,2] - radius),
                           cloud[,3] <= (x[,3] + radius), cloud[,3] >= (x[,3] - radius))

  cube <- cube[,1:3]
  cube$distance <- as.vector(dist.xyz(x[,1:3], cube[,1:3]))
  neig <- cube$distance <= radius & cube$distance > 0
  space <- as.matrix(cube[neig, 1:3])

  if(length(space[,1]) >= 3) {
    pca <- prcomp(space[,1:3], center = TRUE, scale = FALSE, retx = FALSE)
    eigval <- pca$sdev^2

    frame <- data.frame(linearity = (eigval[1]-eigval[2])/eigval[1],
                        planarity = (eigval[2]-eigval[3])/eigval[1],
                        scattering = eigval[3]/eigval[1],
                        omnivariance = (eigval[1]*eigval[2]*eigval[3])^(1/3),
                        anisotropy = (eigval[1]-eigval[3])/eigval[1],
                        eigenentropy = -((eigval[1] * log(eigval[1])) + (eigval[2] * log(eigval[2])) + (eigval[3] * log(eigval[3]))),
                        sum_eigen = sum(eigval),
                        sur_var = min(eigval)/sum(eigval),
                        eigen_ratio = eigval[2]/eigval[2],
                        n = length(space[,1]))


  } else if(length(space[,1]) < 3) {
    frame <- data.frame(linearity = NA,
                        planarity = NA,
                        scattering = NA,
                        omnivariance = NA,
                        anisotropy = NA,
                        eigenentropy = NA,
                        sum_eigen = NA,
                        sur_var = NA,
                        eigen_ratio = NA,
                        n = length(space[,1]))
  }

  frame
}
