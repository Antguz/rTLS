#' @import dplyr
#'
#' @title Neighboring points in a sphere
#'
#' @description Estimate the neighboring points in a shpere around the targed point.
#'
#' @param x  A \code{matrix} or \code{data.frame} of the targed point with xyz coordinates.
#' @param cloud A \code{matrix} or \code{data.frame} of a point cloud with xyz coordinates to extract the neighboring points.
#' @param radius A numeric \code{vector} of a length 1 representing the minimum distance to consider neighboring points.
#'
#' @return A matrix with the xyz coordinates of the neighboring points and a fourth column with their distance.
#' @author J. Antonio Guzman Q. and Ronny Hernandez
#'
#' @examples
#' data("pc_tree")
#' sphere_neighbors(pc_tree[100,], pc_tree, radius = 0.2)
#'
#' @export
sphere_neighbors <- function(x, cloud, radius) {
  cube <- cloud %>% filter(cloud[,1] <= (x[,1] + radius), cloud[,1] >= (x[,1] - radius),
                           cloud[,2] <= (x[,2] + radius), cloud[,2] >= (x[,2] - radius),
                           cloud[,3] <= (x[,3] + radius), cloud[,3] >= (x[,3] - radius))

  cube <- cube[,1:3]

  px <- (x[, 1] - cube[,1])^2
  py <- (x[, 2] - cube[,2])^2
  pz <- (x[, 3] - cube[,3])^2

  cube$distance <- sqrt(px + py + pz)

  neig <- cube$distance <= radius & cube$distance > 0

  neig <- as.matrix(cube[neig, 1:4])

  neig
}
