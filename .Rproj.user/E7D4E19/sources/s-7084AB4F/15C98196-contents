library(bio3d)
library(nabor)
library(dplyr)
library(plyr)
library(foreach)
library(doParallel)
library(boot)
library(rgl)

library(microbenchmark)
library(parallel)
library(gmodels)

test <- read.delim("test2.txt")
test <- test[1:10000,]
point <- test[1,]
cloud <- test[1:10000,]
radius <- 0.5
scales <- c(0.3, 0.5, 0.7, 1)

#### CHANGES multiple-cores
detectCores() ### Cuantos hay
cores <- makeCluster(5)
registerDoParallel(cores) ###Cuantos van a trabajar
getDoParWorkers() ###Cuantos estan trabajando
stopCluster(cores)

cores <- parallel::detectCores()
cl <- makeSOCKcluster(8)
registerDoSNOW(cl)
getDoParWorkers()

dimens.dopar <- function(cloud, radius) {
  results <- foreach(i = 1:length(cloud[,1]), .combine= 'rbind', .inorder = TRUE, .packages = c("dplyr", "bio3d"), .export=c('neighbors', 'eigenvalues')) %dopar% {
    space <- neighbors(cloud[i,], cloud, radius)
    if(length(space[,1]) > 2) {
      values <- eigenvalues(space)
      c(cloud[i,1], cloud[i,2], cloud[i,3], eigenvalues(space))
    } else {
      c(cloud[i,1], cloud[i,2], cloud[i,3], NA, NA, NA)
    }
  }
  results <- as.data.frame(results)
  colnames(results) <- c(names(cloud[1,1:3]), "lambda1", "lambda2", "lambda3")
  rownames(results) <-c()
  results
}
