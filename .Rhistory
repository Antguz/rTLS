library(devtools)
library(roxygen2)
data(pc_tree)
pc_tree
data
devtools::document()
devtools::document()
devtools::document()
dir()
library("rTLS", lib.loc="~/R/win-library/3.5")
load_all()
library(devtools)
library(roxygen2)
load_all()
devtools::load_all()
devtools::load_all()
library(rTLS)
devtools::load_all()
dir()
library(rTLS)
data("pc_tree")
data("pc_tree")
data(pc_tree)
data(pc_tree)
data(pc_tree)
data(pc_tree)
data
head(data)
save(data, file="data/pc_tree.rda")
data("pc_tree")
head(data)
devtools::use_data_raw()
pc_tree <- data
devtools::use_data(pc_tree)
devtools::use_data(pc_tree, overwrite = TRUE)
devtools::load_all()
data("experiment1")
data("pc_tree")
library(rTLS)
devtools::document()
devtools::document()
library("rTLS", lib.loc="~/R/win-library/3.5")
library(rTLS)
library(rTLS)
devtools::document()
library(rTLS)
library(rTLS)
library(rTLS)
library("rTLS", lib.loc="~/R/win-library/3.5")
data("pc_tree")
head(pc_tree)
cloud_dimensionality(pc_tree "distance", 0.2)
cloud_dimensionality(pc_tree, "distance", 0.2)
cloud_dimensionality(pc_tree, "distance", 0.2, parallel = FALSE)
cloud_dimensionality(pc_tree, "distance", 0.2, parallel = FALS)
cloud_dimensionality(pc_tree, "distance", 0.2, parallel = FALSE)
library("dplyr", lib.loc="~/R/win-library/3.5")
library("plyr", lib.loc="~/R/win-library/3.5")
cloud_dimensionality(pc_tree, "distance", 0.2, parallel = FALSE)
cloud_dimensionality(pc_tree, "distance", 0.2, parallel = FALSE)
cloud_dimensionality(pc_tree, "distance", 0.2, parallel = FALSE)
library("devtools", lib.loc="~/R/win-library/3.5")
library("roxygen2", lib.loc="~/R/win-library/3.5")
library(bio3d)
library(nabor)
library(dplyr)
library(plyr)
library(foreach)
library(doParallel)
library(boot)
library(rgl)
data("pc_tree")
neighborhood(pc_tree, method = "distance", radius = 0.2)
library("rTLS", lib.loc="~/R/win-library/3.5")
neighborhood(pc_tree, method = "distance", radius = 0.2)
neighborhood(pc_tree, method = "distance", radius = 0.2)
library(rTLS)
library("rTLS", lib.loc="~/R/win-library/3.5")
library(bio3d)
library(nabor)
library(dplyr)
library(plyr)
library(foreach)
library(doParallel)
library(boot)
library(rgl)
neighborhood(pc_tree, method = "distance", radius = 0.2)
neighborhood(pc_tree, method = "distance", radius = 0.2, parallel = FALSE)
requires(doParallel)
require(doParallel)
detectCores()
detectCores()
cores <- makeCluster(4)
registerDoParallel(cores)
neighborhood(pc_tree, method = "distance", radius = 0.2, parallel = TRUE)
stopCluster(cores)
cores <- makeCluster(4)
registerDoParallel(cores)
dis <- neighborhood(pc_tree, method = "distance", radius = 0.2, parallel = TRUE)
dist
dis
library("rTLS", lib.loc="~/R/win-library/3.5")
dis[[1]]
dis[1]
filter(dis, distance >= 0.1)
filter(dis, distance >= 0.1)
x <- as.list(x)
x <- as.list(dis)
class(x)
class(x) <- "list"
filter(x, distance >= 0.1)
dis
filter(x, distance >= 0.1)
sub_d <- function(x, new_distance) {
subset(x, distance <= )
}
sub_d <- function(x, new_distance) {
subset(x, distance <= new_distance)
}
new_distance = 0.1
sub <- llply(x, .fun = sub_d, new_distance = new_distance, .inform = FALSE, .parallel = FALSE)
sub <- llply(x, .fun = sub_d, new_distance = new_distance, .inform = FALSE, .parallel = FALSE)
subset(x, distance <= new_distance)
x[[1]]
subset(x[[1]], distance <= new_distance)
subset(x[[1]], distance <= new_distance)
class(x[[1]])
x <- x [[1]]
x
x[>new_distance, 4]
x[, 4]
log <- x[, 4] >= new_distance
log
x[log,]
sub <- llply(x, .fun = sub_d, new_distance = new_distance, .inform = FALSE, .parallel = FALSE)
sub <- llply(dis, .fun = sub_d, new_distance = new_distance, .inform = FALSE, .parallel = FALSE)
sub <- llply(dis, .fun = sub_d, new_distance = new_distance, .inform = FALSE, .parallel = FALSE)
sub <- llply(dis, .fun = sub_d, new_distance = 0.1, .inform = FALSE, .parallel = FALSE)
sub <- llply(dis, .fun = sub_d, .inform = FALSE, .parallel = FALSE)
sub <- llply(dis, .fun = sub_d, distance = 0.1, .inform = FALSE, .parallel = FALSE)
sub <- llply(dis, .fun = sub_d, new_distance = 0.1, .inform = FALSE, .parallel = FALSE)
sub_d <- function(x, new_distance) {
log <- x[, 4] >= new_distance
x[log,]
}
sub <- llply(dis, .fun = sub_d, new_distance = 0.1, .inform = FALSE, .parallel = FALSE)
sub
sub <- llply(dis, .fun = sub_d, new_distance = new_distance, .inform = FALSE, .parallel = FALSE)
sub
sub_d <- function(x, new_distance) {
log <- x[, 4] >= new_distance
x[log, order(x[,4])]
}
sub <- llply(dis, .fun = sub_d, new_distance = new_distance, .inform = FALSE, .parallel = FALSE)
sub_d <- function(x, new_distance) {
log <- x[, 4] >= new_distance
x <- x[log,]
x <- x[order(x[,4]),]
}
sub <- llply(dis, .fun = sub_d, new_distance = new_distance, .inform = FALSE, .parallel = FALSE)
x
sub_d <- function(x, new_distance) {
log <- x[, 4] >= new_distance
x <- x[log,]
x <- x[order(x[,4]),]
}
sub(x, 0.1)
x[, 4]
order(x[,4])
log <- x[, 4] >= new_distance
log
x <- x[log,]
x
x
x <- x[order(x[,4]),]
x
sub_distance <- function(x, new_distance) {
if(parallel == TRUE) {
sub <- llply(dis, .fun = sub_d, new_distance = new_distance, .inform = FALSE, .parallel = FALSE)
}
}
sub_distance <- function(x, new_distance) {
sub <- llply(dis,
.fun = function(x, new_distance) {x <- x[x[, 4] >= new_distance,]},
new_distance = new_distance,
.inform = FALSE,
.parallel = FALSE)
}
sub_distance(dis, 0.1)
sub_distance <- function(x, new_distance) {
sub <- llply(dis,
.fun = function(x, new_distance) {x <- x[x[, 4] >= new_distance,]},
new_distance = new_distance,
.inform = FALSE,
.parallel = FALSE)
sub
}
a <- sub_distance(dis, 0.1)
a
sub_distance <- function(x, new_distance) {
sub <- llply(dis,
.fun = function(x, new_distance) {x <- x[x[, 4] <= new_distance,]},
new_distance = new_distance,
.inform = FALSE,
.parallel = FALSE)
sub
}
a <- sub_distance(dis, 0.1)
a
library(rTLS)
library("rTLS", lib.loc="~/R/win-library/3.5")
library(bio3d)
library(nabor)
library(dplyr)
library(plyr)
library(foreach)
library(doParallel)
library(boot)
library(rgl)
data("pc_tree")
head(data)
head(pc_tree)
dis <- neighborhood(pc_tree, method = "distance", radius = 0.2, parallel = FALSE)
dis <- neighborhood(pc_tree[1:100], method = "distance", radius = 0.2, parallel = FALSE)
dis <- neighborhood(pc_tree[1:100,], method = "distance", radius = 0.2, parallel = FALSE)
dis
sub_distance(dis, new_distance = 0.1)
#' @author J. Antonio Guzman Q. and Ronny Hernandez
#'
#' @examples
#' data("pc_tree")
#'
#' ###Subset neighboring points from 0.2 to 0.1
#' dis <- neighborhood(pc_tree, method = "distance", radius = 0.2, parallel = FALSE)
#' sub_distance(dis, new_distance = 0.1)
#'
#' @export
sub_distance <- function(x, new_distance) {
sub <- llply(dis,
.fun = function(x, new_distance) {x <- x[x[, 4] <= new_distance,]},
new_distance = new_distance,
.inform = FALSE,
.parallel = FALSE)
return(sub)
}
sub_distance(dis, new_distance = 0.1)
library(devtools)
library(roxygen2)
devtools::document()
devtools::document()
library(rTLS)
